{"version":3,"sources":["components/Button.js","components/Header.js","components/Footer.js","components/Task.js","components/Tasks.js","components/AddTask.js","components/About.js","components/Contact.js","App.js","reportWebVitals.js","index.js"],"names":["Button","text","color","toggleShowForm","style","backgroundColor","className","onClick","defaultProps","protoType","PropTypes","string","isRequired","Header","showForm","location","useLocation","pathname","console","log","Footer","to","Task","task","deleteTask","editReminder","reminder","onDoubleClick","id","cursor","fontSize","day","Tasks","tasks","length","map","AddTask","addTask","useState","setText","setDay","setReminder","handleChange","e","target","value","onSubmit","preventDefault","Math","floor","random","alert","htmlFor","type","placeholder","onChange","checked","About","exact","Contact","App","setShowForm","setTasks","fetchTasks","a","fetch","res","json","data","fetchTask","useEffect","getTasks","method","newTasks","filter","fetchedTask","headers","body","JSON","stringify","path","render","props","Fragment","component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.3bb5cfa3.chunk.js","sourcesContent":["import PropTypes from 'prop-types'\r\n\r\nfunction Button({ text, color, toggleShowForm }) {\r\n  const setShowForm = () => toggleShowForm()\r\n  return (\r\n    <button style={ { backgroundColor: color } } className='btn' onClick={ setShowForm }>\r\n      { text }\r\n    </button>\r\n  )\r\n}\r\n\r\nButton.defaultProps = {\r\n  color: 'steelblue',\r\n}\r\n\r\nButton.protoType = {\r\n  text: PropTypes.string.isRequired\r\n}\r\n\r\nexport default Button\r\n","import { PropTypes } from 'prop-types'\r\nimport { useLocation } from 'react-router-dom'\r\nimport Button from './Button'\r\n\r\n\r\nfunction Header({ toggleShowForm, showForm }) {\r\n  const location = useLocation().pathname\r\n  console.log(location)\r\n  return (\r\n    <header>\r\n      <h1>Task Tracker</h1>\r\n      { location === \"/\" && <Button text={ showForm ? \"close\" : \"add\" } color={ showForm ? \"red\" : 'green' } toggleShowForm={ toggleShowForm } /> }\r\n    </header>\r\n  )\r\n}\r\n\r\nHeader.propTypes = {\r\n  toggleShowForm: PropTypes.func.isRequired,\r\n  showForm: PropTypes.bool.isRequired\r\n}\r\n\r\nexport default Header\r\n\r\n","import { NavLink } from 'react-router-dom'\r\nfunction Footer() {\r\n  return (\r\n    <footer>\r\n      Copyright &copy; 2021 <br />\r\n      <NavLink to=\"/about\">About</NavLink> | <NavLink to=\"/contact\">Contact</NavLink>\r\n    </footer>\r\n  )\r\n}\r\n\r\nexport default Footer\r\n","import PropTypes from 'prop-types'\r\nimport { AiFillCloseCircle } from \"react-icons/ai\";\r\nconst Task = ({ task, deleteTask, editReminder }) => {\r\n  const deleteOneTask = () => {\r\n    deleteTask(task.id)\r\n  }\r\n  const toggleReminder = () => {\r\n    editReminder(task.id)\r\n  }\r\n  return (\r\n    <div className={ `task ${task.reminder && \"reminder\"}` } onDoubleClick={toggleReminder}>\r\n      <h3>\r\n        { task.text }\r\n        <AiFillCloseCircle style={{color: 'red', cursor: \"pointer\", fontSize:'1.8rem'}} onClick={deleteOneTask} />\r\n      </h3>\r\n      <p>{ task.day }</p>\r\n    </div>\r\n  )\r\n}\r\n\r\nTask.propTypes = {\r\n  task: PropTypes.object.isRequired,\r\n}\r\n\r\nexport default Task\r\n","import PropTypes from 'prop-types'\r\nimport Task from './Task'\r\n\r\nconst Tasks = ({ tasks, deleteTask, editReminder }) => {\r\n  return (\r\n    <ul>\r\n      {\r\n        tasks && tasks.length > 0 ? tasks.map(task => <Task key={ task.id } task={ task } deleteTask={ deleteTask } editReminder={ editReminder } />) : \"Nothing To show here\"\r\n      }\r\n    </ul>\r\n  )\r\n}\r\nTasks.defaultProps = {\r\n\r\n}\r\nTasks.propTypes = {\r\n  tasks: PropTypes.array,\r\n  deleteTask: PropTypes.func.isRequired,\r\n  editReminder: PropTypes.func.isRequired,\r\n}\r\n\r\nexport default Tasks\r\n","import { useState } from 'react'\r\nimport { PropTypes } from 'prop-types'\r\n\r\nfunction AddTask({ addTask }) {\r\n\r\n  const [text, setText] = useState('')\r\n  const [day, setDay] = useState('')\r\n  const [reminder, setReminder] = useState(false)\r\n\r\n  const handleChange = e => {\r\n    e.target.id === 'text' && setText(e.target.value)\r\n    e.target.id === \"day\" && setDay(e.target.value)\r\n    e.target.id === \"reminder\" && setReminder(!reminder)\r\n  }\r\n\r\n  const addNewTask = (e) => {\r\n    e.preventDefault()\r\n    if (!text || !day) {\r\n      alert(\"please enter task and date!\")\r\n      return\r\n    }\r\n    addTask({ id: Math.floor(Math.random() * 10000), text: text, day: day, reminder: reminder })\r\n    setText(\"\")\r\n    setDay(\"\")\r\n    setReminder(false)\r\n  }\r\n  return (\r\n    <form className=\"add-form\" onSubmit={ addNewTask }>\r\n      <div className=\"form-control\">\r\n        <label htmlFor=\"text\">Task: </label>\r\n        <input type=\"text\" id=\"text\" placeholder=\"Add Task\" value={ text } onChange={ handleChange } />\r\n      </div>\r\n      <div className=\"form-control\">\r\n        <label htmlFor=\"day\">Task: </label>\r\n        <input id=\"day\" type=\"text\" placeholder=\"Due Date\" value={ day } onChange={ handleChange } />\r\n      </div>\r\n      <div className=\"form-control form-control-check\">\r\n        <label htmlFor=\"reminder\">Reminder :  </label>\r\n        <input type=\"checkbox\" id=\"reminder\" checked={ reminder } onChange={ handleChange } />\r\n      </div>\r\n      <input type=\"submit\" value=\"Add Task\" className=\"btn btn-block\" />\r\n    </form>\r\n  )\r\n}\r\n\r\nAddTask.propTypes = {\r\n  addTask: PropTypes.func.isRequired,\r\n}\r\n\r\nexport default AddTask\r\n\r\n","import { NavLink } from 'react-router-dom'\r\nconst About = () => {\r\n  return (\r\n    <div>\r\n      About Page\r\n      <br />\r\n      <NavLink to=\"/\" exact>Main</NavLink> | <NavLink to=\"/contact\">Contact</NavLink>\r\n\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default About\r\n","import { NavLink } from 'react-router-dom'\r\nconst Contact = () => {\r\n  return (\r\n    <div>\r\n      Contact Page\r\n      <br />\r\n      <NavLink to=\"/\" exact >Main Page</NavLink> | <NavLink to=\"/about\">About</NavLink>\r\n\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Contact\r\n","import React, { useState, useEffect } from 'react'\nimport { BrowserRouter, Route } from 'react-router-dom'\n\nimport Header from './components/Header'\nimport Footer from './components/Footer'\nimport Tasks from './components/Tasks'\nimport AddTask from './components/AddTask'\nimport About from './components/About'\nimport Contact from './components/Contact'\n\nfunction App() {\n  const [showForm, setShowForm] = useState(false)\n  const [tasks, setTasks] = useState()\n\n  const fetchTasks = async () => {\n    const res = await fetch(\"http://localhost:951/tasks\")\n    const data = await res.json()\n    return data\n  }\n\n  const fetchTask = async (id) => {\n    const res = await fetch(`http://localhost:951/tasks/${id}`)\n    const data = await res.json()\n    return data\n  }\n  useEffect(() => {\n    // doesn't work\n    // fetch(\"http://localhost:951/tasks\")\n    //   .then(res => {\n    //     res.json();\n    //     console.log(res)\n    //   })\n    //   .then(data => {\n    //     // setTasks(res)\n    //     console.log(data)\n    //   })\n    const getTasks = async () => {\n      const data = await fetchTasks()\n      setTasks(data)\n    }\n    getTasks()\n  }, [])\n\n  const deleteTask = async (id) => {\n    // delete on server\n    await fetch(`http://localhost:951/tasks/${id}`,\n      {\n        method: \"DELETE\"\n      })\n\n    // delete locally\n    let newTasks = [...tasks].filter(task => task.id !== id)\n    setTasks(newTasks)\n  }\n\n  const editReminder = async (id) => {\n    // const fetchedTask = async (id) => {\n    //   const res = await fetchTask(id)\n    //   res.reminder = !res.reminder\n    //   // console.log(res)\n    //   fetch(`http://localhost:951/tasks/${id}`, {\n    //     method: \"PUT\",\n    //     headers: {\n    //       \"Content-type\": \"application/json\"\n    //     },\n    //     body: JSON.stringify(res)\n    //   })\n    // }\n    // fetchedTask(id)\n    const fetchedTask = await fetchTask(id)\n    fetchedTask.reminder = !fetchedTask.reminder\n    fetch(`http://localhost:951/tasks/${id}`, {\n      method: \"PUT\",\n      headers: {\n        \"Content-type\": \"application/json\"\n      },\n      body: JSON.stringify(fetchedTask)\n    })\n    setTasks(tasks.map(task => task.id === id ? fetchedTask : task))\n  }\n\n  const addTask = async (task) => {\n    const newTasks = await fetch(\"http://localhost:951/tasks\", {\n      method: \"POST\",\n      headers: {\n        \"Content-type\": \"Application/json\"\n      },\n      body: JSON.stringify(task)\n    })\n    // console.log(newTasks)\n    const data = await newTasks.json()\n    // console.log(data)\n\n    setTasks([...tasks, data])\n  }\n\n  const toggleShowForm = () => {\n    setShowForm(!showForm)\n  }\n\n  return (\n    <BrowserRouter>\n      <div className=\"container\">\n        <Header toggleShowForm={ toggleShowForm } showForm={ showForm } />\n        <Route path=\"/\" exact render={ (props) => (\n          <React.Fragment>\n            { showForm && <AddTask addTask={ addTask } /> }\n            <Tasks tasks={ tasks } deleteTask={ deleteTask } editReminder={ editReminder } />\n          </React.Fragment>\n        ) } />\n        <Route path='/about' component={ About } />\n        <Route path='/contact' component={ Contact } />\n        <Footer />\n      </div>\n    </BrowserRouter>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}